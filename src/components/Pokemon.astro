---
import type { API2PokemonXResponse } from "../types/pokeApi2";
import PokeCard from "./PokeCard.astro";
import Statistics from "./Statistics.astro";


// Define pokemon_name con un valor por defecto
let pokemon_name = "pikachu"; // Valor predeterminado

// Maneja la solicitud POST para actualizar pokemon_name
if (Astro.request.method === "POST") {
  try {
    // Obtener los datos del formulario
    const formData = await Astro.request.formData();
    // Obtener el valor del campo 'search'
    pokemon_name = formData.get("search")?.toString().trim() || "pikachu"; // Actualiza pokemon_name con el valor del formulario
  } catch (e) {
    if (e instanceof Error) {
      console.error(e.message);
    }
  }
}

// Pasa pokemon_name al componente
const pokemon_name_form = pokemon_name;


const fetchDetails = async () => {
  try {
    const res2 = await fetch(`https://pokeapi.co/api/v2/pokemon/${pokemon_name}`);

    if (!res2.ok) {
      throw new Error(`HTTP error! Status: ${res2.status}`);
    }

    const data = (await res2.json()) as API2PokemonXResponse;

    const sprite =
      data.sprites.other?.["official-artwork"]?.front_default ||
      data.sprites?.front_default;
      // data.sprites.versions.
    const weight = data.weight;
    const hp = data.stats[0]?.base_stat;
    const attack = data.stats[1]?.base_stat;
    const defense = data.stats[2]?.base_stat;
    const special_attack = data.stats[3]?.base_stat;
    const special_defense = data.stats[4]?.base_stat;
    const speed = data.stats[5]?.base_stat;
    const abilities = data.abilities.map((a) => a.ability.name);

    return {
      sprite,
      name: pokemon_name.charAt(0).toUpperCase() + pokemon_name.slice(1),
      weight,
      abilities,
      hp,
      attack,
      defense,
      special_attack,
      special_defense,
      speed,
    };
  } catch (error) {
    if (error instanceof Error) {
      console.error(`Failed to fetch Pokemon details: ${error.message}`);
      // Puedes manejar el error aqu√≠, por ejemplo, devolviendo valores por defecto o lanzando el error para que sea manejado en otro lugar
      return {
        sprite: '',
        name: pokemon_name.charAt(0).toUpperCase() + pokemon_name.slice(1),
        weight: 0,
        abilities: [],
        hp: 0,
        attack: 0,
        defense: 0,
        special_attack: 0,
        special_defense: 0,
        speed: 0,
      };
    }
    throw error; // Re-lanzar el error si no es una instancia de Error
  }
};

const pokemonDetails = await fetchDetails();
---

<Statistics
  name={pokemonDetails.name}
  hp={pokemonDetails.hp}
  attack={pokemonDetails.attack}
  defense={pokemonDetails.defense}
  special_attack={pokemonDetails.special_attack}
  special_defense={pokemonDetails.special_defense}
  speed={pokemonDetails.speed}
> 
<form method="POST" action="/pokeapi-v1" class="w-[80%] absolute top-[110px] md:relative md:top-10 md:w-full">
  <label
    for="default-search"
    class="mb-2 text-sm font-medium text-gray-900 sr-only dark:text-white"
    >Search</label
  >
  <div class="relative">
    <div
      class="absolute inset-y-0 start-0 flex items-center ps-3 pointer-events-none"
    >
      <svg
        class="w-4 h-4 text-gray-500 dark:text-gray-400"
        aria-hidden="true"
        xmlns="http://www.w3.org/2000/svg"
        fill="none"
        viewBox="0 0 20 20"
      >
        <path
          stroke="currentColor"
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="2"
          d="m19 19-4-4m0-7A7 7 0 1 1 1 8a7 7 0 0 1 14 0Z"></path>
      </svg>
    </div>
    <input
      type="search"
      name="search"
      id="default-search"
      class="block w-full p-4 ps-10 text-sm text-gray-900 border border-gray-300 rounded-lg bg-gray-50 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500"
      placeholder="Search Mockups, Logos..."
    />
    <button
      type="submit"
      class="text-white absolute end-2.5 bottom-2.5 bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm px-4 py-2 dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800"
      >Search</button
    >
  </div>
</form>
</Statistics>

<PokeCard sprite={pokemonDetails.sprite} />
